# 3.10 矩阵和线性代数的计算

# 目标： 执行矩阵和线性代数方面的操作，比如矩阵乘法、求行列式、解线性方程等。
# 解决方案：numpy.matrix
import numpy as np
m = np.matrix([[1, -2, 3], [0, 4, 5], [7, 8, -9]])
print(m)
# [[ 1 -2  3]
#  [ 0  4  5]
#  [ 7  8 -9]]

# 矩阵转置transpose
t = m.T
print(t)
#[[ 1  0  7]
# [-2  4  8]
# [ 3  5 -9]]

# 矩阵求逆inverse
i = m.I
print(i)
# [[ 0.33043478 -0.02608696  0.09565217]
#  [-0.15217391  0.13043478  0.02173913]
#  [ 0.12173913  0.09565217 -0.0173913 ]]

# 矩阵相乘：
v = np.matrix([[2], [3], [4]])
print(v)
# [[2]
#  [3]
#  [4]]

multi = m * v
print(multi)
# [[ 8]
#  [32]
#  [ 2]]

# numpy.linalg有其余的操作：
# 求秩
det = np.linalg.det(m)
print(det)
# -229.99999999999983

# 求矩阵特征值
eig = np.linalg.eigvals(m)
print(eig)
# [-13.11474312   2.75956154   6.35518158]

# 求解mx = v
x = np.linalg.solve(m, v)
print(x)
# [[0.96521739]
#  [0.17391304]
#  [0.46086957]]
